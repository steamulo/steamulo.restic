---

- name: Create restic scripts directory
  ansible.builtin.file:
    path: "{{ restic_scripts_directory }}"
    state: directory
    owner: root
    group: "{{ restic_root_group }}"
    mode: u=rwx,g=rx,o=rx

- name: Getting all used repo
  ansible.builtin.set_fact:
    restic_used_repositories: "{{ restic_folders | union(restic_stdouts) | map(attribute='repositories') | flatten | unique }}"

- name: Create restic-password scripts
  when: restic_repository.key in restic_used_repositories
  ansible.builtin.copy:
    content: "{{ restic_repository.value.password }}"
    dest: "{{ restic_scripts_directory }}/restic-password-{{ restic_repository.key }}"
    owner: root
    group: "{{ restic_root_group }}"
    mode: u=rw,g=,o=
  loop: "{{ restic_repositories | dict2items }}"
  loop_control:
    loop_var: restic_repository

- name: Create restic-config-source scripts
  when: restic_repository.key in restic_used_repositories
  ansible.builtin.copy:
    content: |
      #!/usr/bin/env bash
      export RESTIC_REPOSITORY={{ restic_repository.value.location }}
      export RESTIC_PASSWORD={{ restic_repository.value.password }}
      export RESTIC_CACHE_DIR={{ restic_cache_directory }}
      {% for key, value in (restic_repository.value.environment_variables | default({})).items() %}
      export {{ key }}={{ value }}
      {% endfor %}
    dest: "{{ restic_scripts_directory }}/restic-config-source-{{ restic_repository.key }}"
    owner: root
    group: "{{ restic_root_group }}"
    mode: u=rw,g=,o=
  loop: "{{ restic_repositories | dict2items }}"
  loop_control:
    loop_var: restic_repository

- name: Create restic-backup scripts
  when: restic_repository.key in restic_used_repositories
  ansible.builtin.template:
    src: restic-backup.sh.j2
    dest: "{{ restic_scripts_directory }}/restic-backup-{{ restic_repository.key }}.sh"
    owner: root
    group: "{{ restic_root_group }}"
    mode: u=rwx,g=,o=
  loop: "{{ restic_repositories | dict2items }}"
  loop_control:
    loop_var: restic_repository

- name: Create restic-backup-failure script
  ansible.builtin.template:
    src: restic-backup-failure.sh.j2
    dest: "{{ restic_scripts_directory }}/restic-backup-failure.sh"
    owner: root
    group: "{{ restic_root_group }}"
    mode: u=rwx,g=,o=
